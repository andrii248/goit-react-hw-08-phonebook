{"version":3,"file":"static/js/325.7163a1d2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","webpack://goit-react-hw-08-phonebook/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsView/ContactsView.module.css?6174","pages/ContactsView/ContactsView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"btn\":\"ContactItem_btn__1h5dG\"};","import PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\n\nconst ContactItem = ({ item }) => {\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  return (\n    <div className={css.item}>\n      {item.name}: {item.number}\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={() => deleteContact(item.id)}\n        disabled={isLoading}\n      >\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactItem;\n","import css from './ContactList.module.css';\nimport { useGetContactsQuery } from 'redux/contactsSlice';\nimport ContactItem from 'components/ContactItem';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filterSlice';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst ContactList = () => {\n  const { data: contacts, isLoading } = useGetContactsQuery();\n  const filter = useSelector(getFilter);\n\n  function getAvailableContacts() {\n    if (filter === '') {\n      return contacts;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  }\n  const filteredContacts = getAvailableContacts();\n\n  if (isLoading) {\n    return (\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    );\n  }\n\n  if (contacts) {\n    return (\n      <ul className={css.list}>\n        {contacts &&\n          filteredContacts.map(contact => (\n            <li key={contact.id}>\n              <ContactItem item={contact} />\n            </li>\n          ))}\n      </ul>\n    );\n  }\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterItems, getFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const onChangeFilter = e => {\n    dispatch(filterItems(e.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Search contact by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\"};","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSlice';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RotatingLines } from 'react-loader-spinner';\n\nexport default function ContactForm() {\n  const { data } = useGetContactsQuery();\n  const [addContact, { isLoading, isSuccess }] = useAddContactMutation();\n\n  const [number, setNumber] = useState('');\n  const [name, setName] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') {\n      setName(value);\n    }\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const addExistingName = data.some(\n      contact => contact.name.toLocaleLowerCase() === name.toLowerCase()\n    );\n\n    if (addExistingName) {\n      toast.error(`Contact ${name} already exists in your ContactList`);\n      return;\n    }\n\n    if (isSuccess) {\n      addContact({ name: name, number: number });\n    }\n    addContact({ name: name, number: number });\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={onSubmitForm}>\n      <label className={css.label}>\n        Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Phone\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? (\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        ) : (\n          'Add new contact'\n        )}\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"ContactsView_contacts__6E96v\",\"list\":\"ContactsView_list__GsDLS\"};","import ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from 'components/ContactForm';\nimport css from './ContactsView.module.css';\n\nexport default function ContactsView() {\n  return (\n    <main className={css.contacts}>\n      <div className={css.list}>\n        <Filter />\n        <ContactList />\n      </div>\n      <ContactForm />\n    </main>\n  );\n}\n"],"names":["item","useDeleteContactMutation","deleteContact","isLoading","className","css","name","number","type","onClick","id","disabled","useGetContactsQuery","contacts","data","filter","useSelector","getFilter","filteredContacts","normalizedFilter","toLocaleLowerCase","contact","includes","getAvailableContacts","strokeColor","strokeWidth","animationDuration","width","visible","map","dispatch","useDispatch","value","onChange","e","filterItems","target","ContactForm","useAddContactMutation","addContact","isSuccess","useState","setNumber","setName","handleChange","currentTarget","resetForm","onSubmit","preventDefault","some","toLowerCase","toast","pattern","title","required","ContactsView"],"sourceRoot":""}